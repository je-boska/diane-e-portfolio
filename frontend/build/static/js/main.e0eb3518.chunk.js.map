{"version":3,"sources":["UserContext.js","components/Section/Section.js","screens/HomeScreen/HomeScreen.js","requests/EditPostRequests.js","requests/AdminRequests.js","components/SectionPreview/SectionPreview.js","screens/AdminScreen/AdminScreen.js","hooks/UseForm.js","components/PostSectionForm/PostSectionForm.js","screens/EditPostScreen/EditPostScreen.js","requests/LoginRequests.js","screens/LoginScreen/LoginScreen.js","App.js","index.js"],"names":["UserContext","createContext","localUser","JSON","parse","sessionStorage","getItem","reducer","user","newUser","removeItem","UserProvider","props","useReducer","setUser","useEffect","setItem","stringify","Provider","value","children","md","MarkdownIt","Layout","post","layout","sections","map","section","key","sectionId","className","image","src","alt","title","text","style","fontFamily","font","dangerouslySetInnerHTML","__html","render","HomeScreen","useState","posts","setPosts","a","axios","get","data","getData","sort","b","position","_id","length","getPostData","id","uploadImage","token","formData","FormData","append","headers","Authorization","submitForm","put","deleteImage","imageId","slice","delete","checkImageInDatabase","postImages","i","push","includes","cancelForm","queryString","urlParams","URLSearchParams","imageInDb","createPost","deletePost","getAllPosts","sortedData","SectionPreview","changeSection","deleteSectionHandler","editing","editPostScreen","onClick","cursor","AdminScreen","history","loading","setLoading","useContext","getPosts","useCallback","deletePosition","window","confirm","rearrangedPosts","filter","movePostUpHandler","movePostDownHandler","deleteHandler","disabled","to","defaultValues","sectionSaved","imageCleanupPublish","postsLength","PostSectionForm","setSections","setFont","setTitle","setText","setImage","setSectionId","setSectionSaved","setImageCleanupPublish","uploadHandler","e","concat","target","files","imageUrl","onSubmit","preventDefault","sectionToReplaceIndex","findIndex","newSections","alert","Math","random","toString","substring","type","name","onChange","size","placeholder","rows","cols","accept","EditPostScreen","match","values","setValues","prev","getPost","getPostsLength","useForm","isCreatePost","location","search","params","submitHandler","cancelHandler","newFont","newTitle","newText","newImage","imageSaved","imageToRemove","find","authUser","email","password","LoginScreen","setEmail","setPassword","error","setError","htmlFor","App","path","component","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0eb3518.chunk.js","sourcesContent":["import React from 'react'\r\nimport { createContext, useReducer, useEffect } from 'react'\r\n\r\nconst UserContext = createContext(null)\r\n\r\nconst localUser = JSON.parse(sessionStorage.getItem('user'))\r\n\r\nlet reducer = (user, newUser) => {\r\n  if (newUser === null) {\r\n    sessionStorage.removeItem('user')\r\n    return null\r\n  }\r\n  return { ...user, ...newUser }\r\n}\r\n\r\nconst UserProvider = props => {\r\n  const [user, setUser] = useReducer(reducer, localUser || null)\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n  }, [user])\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser }}>\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n\r\nexport { UserContext, UserProvider }\r\n","import React from 'react'\r\nimport './Section.css'\r\nimport MarkdownIt from 'markdown-it'\r\n\r\nconst md = new MarkdownIt()\r\n\r\nconst Layout = ({ post, layout }) => {\r\n  return (\r\n    <>\r\n      {post.sections.map(section => (\r\n        <section key={section.sectionId} className={`section ${layout}`}>\r\n          {section.image && <img src={section.image} alt={section.title} />}\r\n          {section.title || section.text ? (\r\n            <div className='centered-text'>\r\n              {section.title ? (\r\n                <h1 style={{ fontFamily: section.font }}>{section.title}</h1>\r\n              ) : null}\r\n              {section.text ? (\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: md.render(section.text),\r\n                  }}></div>\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n        </section>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React, { useState, useEffect } from 'react'\r\nimport './HomeScreen.css'\r\nimport axios from 'axios'\r\nimport Section from '../../components/Section/Section'\r\n\r\nconst HomeScreen = () => {\r\n  const [posts, setPosts] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const { data } = await axios.get('/api/posts')\r\n      setPosts(data)\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {posts\r\n        .sort((a, b) => (a.position > b.position ? -1 : 1))\r\n        .map(post => (\r\n          <section key={post._id} className='post'>\r\n            {post.sections.length === 1 ? (\r\n              <Section post={post} layout='one-layout' />\r\n            ) : post.sections.length === 2 ? (\r\n              <Section post={post} layout='two-layout' />\r\n            ) : post.sections.length === 3 ? (\r\n              <Section post={post} layout='three-layout' />\r\n            ) : post.sections.length === 4 ? (\r\n              <Section post={post} layout='four-layout' />\r\n            ) : null}\r\n          </section>\r\n        ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import axios from 'axios'\r\n\r\nexport async function getPostData(id) {\r\n  const post = await axios.get(`/api/posts/${id}`)\r\n  const { sections, position } = post.data\r\n  return { sections, position }\r\n}\r\n\r\nexport async function uploadImage(image, token) {\r\n  const formData = new FormData()\r\n  formData.append('image', image)\r\n  const headers = {\r\n    'Content-Type': 'multipart/form-data',\r\n    Authorization: `Bearer ${token}`,\r\n  }\r\n\r\n  const { data } = await axios.post('/api/upload', formData, { headers })\r\n\r\n  return data.data\r\n}\r\n\r\nexport async function submitForm(id, token, data) {\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    Authorization: `Bearer ${token}`,\r\n  }\r\n\r\n  await axios.put(`/api/posts/${id}`, data, { headers })\r\n}\r\n\r\nexport function deleteImage(image, token) {\r\n  const imageId = image.slice(-24, -4)\r\n  axios.delete(`/api/upload/${imageId}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n}\r\n\r\nexport async function checkImageInDatabase(image, id) {\r\n  const data = await getPostData(id)\r\n  const postImages = []\r\n  for (let i = 0; i < data.sections.length; i++) {\r\n    postImages.push(data.sections[i].image)\r\n  }\r\n  if (postImages.includes(image)) {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport async function cancelForm(queryString, token, id, sections, image) {\r\n  const urlParams = new URLSearchParams(queryString)\r\n  const createPost = urlParams.get('create')\r\n\r\n  if (createPost) {\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`,\r\n    }\r\n    await axios.delete(`/api/posts/${id}`, {\r\n      headers,\r\n    })\r\n    // If post was made using Create Post, delete all images\r\n    for (let i = 0; i < sections.length; i++) {\r\n      if (sections[i].image) {\r\n        deleteImage(sections[i].image, token)\r\n      }\r\n    }\r\n    if (image) {\r\n      deleteImage(image, token)\r\n    }\r\n  } else {\r\n    // If post existed and is being edited,\r\n    // Compare post in database to current images,\r\n    // Delete images not in database post\r\n    for (let i = 0; i < sections.length; i++) {\r\n      if (sections[i].image) {\r\n        const imageInDb = await checkImageInDatabase(sections[i].image, id)\r\n        if (!imageInDb) {\r\n          deleteImage(sections[i].image, token)\r\n        }\r\n      }\r\n    }\r\n    // Cleanup current image as well, if not in DB\r\n    const imageInDb = await checkImageInDatabase(image, id)\r\n    if (image && !imageInDb) {\r\n      deleteImage(image, token)\r\n    }\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport { deleteImage } from './EditPostRequests'\r\n\r\nexport async function createPost(token) {\r\n  const {\r\n    data: { _id },\r\n  } = await axios.post(\r\n    '/api/posts',\r\n    {},\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  )\r\n\r\n  return _id\r\n}\r\n\r\nexport async function deletePost(token, id) {\r\n  const post = await axios.get(`/api/posts/${id}`)\r\n  const { sections } = post.data\r\n  for (let i = 0; i < sections.length; i++) {\r\n    if (sections[i].image) {\r\n      deleteImage(sections[i].image, token)\r\n    }\r\n  }\r\n  await axios.delete(`/api/posts/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n}\r\n\r\nexport async function getAllPosts() {\r\n  const { data } = await axios.get('/api/posts')\r\n  const sortedData = data.sort((a, b) => (a.position < b.position ? 1 : -1))\r\n  return sortedData\r\n}\r\n","import React from 'react'\r\nimport './SectionPreview.css'\r\n\r\nconst SectionPreview = ({\r\n  section,\r\n  changeSection,\r\n  deleteSectionHandler,\r\n  editing,\r\n  editPostScreen,\r\n}) => {\r\n  const { font, title, text, image, sectionId } = section\r\n\r\n  const selectSectionHandler = () => {\r\n    if (editPostScreen) {\r\n      changeSection(font, title, text, image, sectionId)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`section-preview ${editing ? 'editing' : 'not-editing'}`}\r\n      onClick={selectSectionHandler}\r\n      style={editPostScreen && { cursor: 'pointer' }}>\r\n      {image && <img src={image} alt={title}></img>}\r\n      {title ? (\r\n        <div className='preview-title-text'>\r\n          <h5 style={{ fontFamily: font }}>{title}</h5>\r\n        </div>\r\n      ) : text ? (\r\n        <div className='preview-title-text'>\r\n          <p>{text}</p>\r\n        </div>\r\n      ) : null}\r\n      {editPostScreen && editing && (\r\n        <button\r\n          className='delete-section-button'\r\n          onClick={deleteSectionHandler}>\r\n          <h3>-</h3>\r\n        </button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SectionPreview\r\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\r\nimport './AdminScreen.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { UserContext } from '../../UserContext'\r\nimport {\r\n  createPost,\r\n  deletePost,\r\n  getAllPosts,\r\n} from '../../requests/AdminRequests'\r\nimport SectionPreview from '../../components/SectionPreview/SectionPreview'\r\nimport { submitForm } from '../../requests/EditPostRequests'\r\n\r\nconst AdminScreen = ({ history }) => {\r\n  const [posts, setPosts] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const { user, setUser } = useContext(UserContext)\r\n\r\n  const getPosts = useCallback(async () => {\r\n    const data = await getAllPosts()\r\n    setPosts(data)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      history.push('/login')\r\n    } else {\r\n      getPosts()\r\n    }\r\n  }, [user, history, getPosts])\r\n\r\n  async function deleteHandler(id, deletePosition) {\r\n    setLoading(true)\r\n    if (window.confirm('Are you sure?')) {\r\n      await deletePost(user.token, id)\r\n    }\r\n    const rearrangedPosts = posts\r\n      .filter(post => post.position !== deletePosition)\r\n      .map(post => {\r\n        return {\r\n          ...post,\r\n          position:\r\n            post.position > deletePosition ? post.position - 1 : post.position,\r\n        }\r\n      })\r\n    for (let i = 0; i < rearrangedPosts.length; i++) {\r\n      if (rearrangedPosts[i].position >= deletePosition) {\r\n        submitForm(rearrangedPosts[i]._id, user.token, rearrangedPosts[i])\r\n      }\r\n    }\r\n    setPosts(rearrangedPosts)\r\n    setLoading(false)\r\n  }\r\n\r\n  async function createPostHandler() {\r\n    const id = await createPost(user.token)\r\n    history.push(`/admin/edit/${id}?create=true`)\r\n  }\r\n\r\n  function logoutHandler() {\r\n    setUser(null)\r\n    sessionStorage.removeItem('user')\r\n  }\r\n\r\n  function movePostUpHandler(position) {\r\n    const rearrangedPosts = posts.map(post => {\r\n      return {\r\n        ...post,\r\n        position:\r\n          post.position === position && post.position < posts.length\r\n            ? post.position + 1\r\n            : post.position === position + 1\r\n            ? position\r\n            : post.position,\r\n      }\r\n    })\r\n    for (let i = 0; i < rearrangedPosts.length; i++) {\r\n      if (\r\n        rearrangedPosts[i].position === position ||\r\n        rearrangedPosts[i].position === position + 1\r\n      ) {\r\n        submitForm(rearrangedPosts[i]._id, user.token, rearrangedPosts[i])\r\n      }\r\n    }\r\n    setPosts(rearrangedPosts)\r\n  }\r\n\r\n  function movePostDownHandler(position) {\r\n    const rearrangedPosts = posts.map(post => {\r\n      return {\r\n        ...post,\r\n        position:\r\n          post.position === position && post.position > 1\r\n            ? post.position - 1\r\n            : post.position === position - 1\r\n            ? post.position + 1\r\n            : post.position,\r\n      }\r\n    })\r\n    for (let i = 0; i < rearrangedPosts.length; i++) {\r\n      if (\r\n        rearrangedPosts[i].position === position ||\r\n        rearrangedPosts[i].position === position - 1\r\n      ) {\r\n        submitForm(rearrangedPosts[i]._id, user.token, rearrangedPosts[i])\r\n      }\r\n    }\r\n    setPosts(rearrangedPosts)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='admin-buttons'>\r\n        <button onClick={createPostHandler} className='create-post-button'>\r\n          <h3>CREATE POST</h3>\r\n        </button>\r\n        <button onClick={logoutHandler} className='logout-button'>\r\n          <h3>LOG OUT</h3>\r\n        </button>\r\n      </div>\r\n      {posts\r\n        .sort((a, b) => (a.position < b.position ? 1 : -1))\r\n        .map(post => (\r\n          <div className='post-card' key={post._id}>\r\n            <div className='up-down-arrows'>\r\n              <button onClick={() => movePostUpHandler(post.position)}>\r\n                <h3>↑</h3>\r\n              </button>\r\n              <button onClick={() => movePostDownHandler(post.position)}>\r\n                <h3>↓</h3>\r\n              </button>\r\n            </div>\r\n            <div className='section-previews'>\r\n              {post.sections.map(section => (\r\n                <SectionPreview key={section.sectionId} section={section} />\r\n              ))}\r\n            </div>\r\n            <div className='delete-edit-buttons'>\r\n              <button\r\n                className='delete-button'\r\n                onClick={() => deleteHandler(post._id, post.position)}\r\n                disabled={loading}>\r\n                <h3>DELETE</h3>\r\n              </button>\r\n              <Link to={`/admin/edit/${post._id}`}>\r\n                <button className='edit-button'>\r\n                  <h3>EDIT</h3>\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminScreen\r\n","import { useState } from 'react'\r\nimport { getAllPosts } from '../requests/AdminRequests'\r\nimport { getPostData } from '../requests/EditPostRequests'\r\n\r\nconst defaultValues = {\r\n  sections: [\r\n    {\r\n      sectionId: 0,\r\n    },\r\n  ],\r\n  sectionId: '',\r\n  font: 'backout',\r\n  title: '',\r\n  text: '',\r\n  image: '',\r\n  loading: false,\r\n  sectionSaved: false,\r\n  imageCleanupPublish: [],\r\n  position: 0,\r\n  postsLength: 0,\r\n}\r\n\r\nexport default function useForm() {\r\n  const [values, setValues] = useState(defaultValues)\r\n\r\n  function setSections(sections) {\r\n    setValues(prev => ({\r\n      ...prev,\r\n      sections,\r\n    }))\r\n  }\r\n\r\n  function setFont(font) {\r\n    setValues(prev => ({\r\n      ...prev,\r\n      font,\r\n    }))\r\n  }\r\n\r\n  function setTitle(title) {\r\n    setValues(prev => ({\r\n      ...prev,\r\n      title,\r\n    }))\r\n  }\r\n\r\n  function setText(text) {\r\n    setValues(prev => ({\r\n      ...prev,\r\n      text,\r\n    }))\r\n  }\r\n\r\n  function setImage(image) {\r\n    setValues(prev => ({\r\n      ...prev,\r\n      image,\r\n    }))\r\n  }\r\n\r\n  function setSectionId(sectionId) {\r\n    setValues(prev => ({\r\n      ...prev,\r\n      sectionId,\r\n    }))\r\n  }\r\n\r\n  function setLoading(loading) {\r\n    setValues(prev => ({\r\n      ...prev,\r\n      loading,\r\n    }))\r\n  }\r\n\r\n  function setSectionSaved(sectionSaved) {\r\n    setValues(prev => ({\r\n      ...prev,\r\n      sectionSaved,\r\n    }))\r\n  }\r\n\r\n  function setImageCleanupPublish(imageCleanupPublish) {\r\n    setValues(prev => ({\r\n      ...prev,\r\n      imageCleanupPublish,\r\n    }))\r\n  }\r\n\r\n  async function getPost(id) {\r\n    const { sections, position } = await getPostData(id)\r\n    setValues(prev => ({\r\n      ...prev,\r\n      sections,\r\n      position,\r\n    }))\r\n  }\r\n\r\n  async function getPostsLength() {\r\n    const data = await getAllPosts()\r\n    setValues(prev => ({\r\n      ...prev,\r\n      postsLength: data.length,\r\n    }))\r\n  }\r\n\r\n  return {\r\n    values,\r\n    setSections,\r\n    setFont,\r\n    setTitle,\r\n    setText,\r\n    setImage,\r\n    setSectionId,\r\n    setLoading,\r\n    setSectionSaved,\r\n    setImageCleanupPublish,\r\n    getPost,\r\n    getPostsLength,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { uploadImage, deleteImage } from '../../requests/EditPostRequests'\r\n\r\nconst PostSectionForm = ({\r\n  sections,\r\n  setSections,\r\n  font,\r\n  setFont,\r\n  title,\r\n  setTitle,\r\n  text,\r\n  setText,\r\n  image,\r\n  setImage,\r\n  sectionId,\r\n  setSectionId,\r\n  loading,\r\n  setLoading,\r\n  token,\r\n  setSectionSaved,\r\n  imageCleanupPublish,\r\n  setImageCleanupPublish,\r\n}) => {\r\n  const submitSectionHandler = e => {\r\n    e.preventDefault()\r\n    if (sectionId) {\r\n      const sectionToReplaceIndex = sections.findIndex(\r\n        section => section.sectionId === sectionId\r\n      )\r\n      const newSections = sections\r\n      newSections[sectionToReplaceIndex] = {\r\n        sectionId,\r\n        font,\r\n        title,\r\n        text,\r\n        image,\r\n      }\r\n      setSections(newSections)\r\n    } else {\r\n      if (sections.length < 4) {\r\n        setSections([\r\n          ...sections,\r\n          {\r\n            sectionId: Math.random().toString(36).substring(2, 9),\r\n            font,\r\n            title,\r\n            text,\r\n            image,\r\n          },\r\n        ])\r\n      } else {\r\n        alert('Post is already full')\r\n        return\r\n      }\r\n    }\r\n    setFont('Georgia')\r\n    setTitle('')\r\n    setText('')\r\n    setImage('')\r\n    setSectionId('')\r\n    setSectionSaved(true)\r\n  }\r\n\r\n  const fontHandler = e => {\r\n    setFont(e.target.value)\r\n    setSectionSaved(false)\r\n  }\r\n\r\n  const titleHandler = e => {\r\n    setTitle(e.target.value)\r\n    setSectionSaved(false)\r\n  }\r\n\r\n  const textHandler = e => {\r\n    setText(e.target.value)\r\n    setSectionSaved(false)\r\n  }\r\n\r\n  const uploadHandler = async e => {\r\n    if (image && !sectionId) {\r\n      deleteImage(image, token)\r\n    } else if (image && sectionId) {\r\n      setImageCleanupPublish(imageCleanupPublish.concat(image))\r\n    }\r\n    setLoading(true)\r\n    const imageUrl = await uploadImage(e.target.files[0], token)\r\n    setImage(imageUrl)\r\n    setLoading(false)\r\n    setSectionSaved(false)\r\n  }\r\n\r\n  function removeImageHandler(e) {\r\n    e.preventDefault()\r\n    if (!sectionId) {\r\n      deleteImage(image, token)\r\n    } else {\r\n      setImageCleanupPublish(imageCleanupPublish.concat(image))\r\n    }\r\n    setImage('')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={submitSectionHandler}>\r\n        <button className='save-button' type='submit' disabled={loading}>\r\n          <h3>SAVE</h3>\r\n        </button>\r\n        <br />\r\n        <select\r\n          name='font-select'\r\n          className='font-select'\r\n          value={font}\r\n          onChange={fontHandler}>\r\n          <option value='backout'>BackOut</option>\r\n          <option value='cirrus-cumulus'>Cirrus Cumulus</option>\r\n          <option value='cantiquenormal'>Cantique-Normal</option>\r\n        </select>\r\n        <br />\r\n        <input\r\n          name='title'\r\n          size='50'\r\n          id='title'\r\n          placeholder='Title'\r\n          value={title}\r\n          onChange={titleHandler}></input>\r\n        <br />\r\n        <textarea\r\n          name='text'\r\n          rows='10'\r\n          cols='50'\r\n          id='text'\r\n          placeholder='Text'\r\n          value={text}\r\n          onChange={textHandler}></textarea>\r\n        <br />\r\n        {image && !loading && (\r\n          <button onClick={removeImageHandler}>\r\n            <h3>- REMOVE IMAGE</h3>\r\n          </button>\r\n        )}\r\n        {image && !loading && (\r\n          <div className='image-preview'>\r\n            <img src={image} alt={title} />\r\n          </div>\r\n        )}\r\n        <div className='image-upload-container'>\r\n          <label className='image-upload-btn'>\r\n            {loading ? 'UPLOADING' : !image ? 'Choose image file' : image}\r\n            <input\r\n              type='file'\r\n              accept='image/png, image/jpg, image/jpeg'\r\n              onChange={uploadHandler}\r\n            />\r\n          </label>\r\n        </div>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostSectionForm\r\n","import React, { useEffect, useContext } from 'react'\r\nimport './EditPostScreen.css'\r\nimport { UserContext } from '../../UserContext'\r\nimport useForm from '../../hooks/UseForm'\r\nimport {\r\n  submitForm,\r\n  cancelForm,\r\n  checkImageInDatabase,\r\n  deleteImage,\r\n} from '../../requests/EditPostRequests'\r\nimport PostSectionForm from '../../components/PostSectionForm/PostSectionForm'\r\nimport SectionPreview from '../../components/SectionPreview/SectionPreview'\r\n\r\nconst EditPostScreen = ({ match, history }) => {\r\n  const { user } = useContext(UserContext)\r\n\r\n  const {\r\n    values,\r\n    setSections,\r\n    setFont,\r\n    setTitle,\r\n    setText,\r\n    setImage,\r\n    setSectionId,\r\n    setLoading,\r\n    setSectionSaved,\r\n    setImageCleanupPublish,\r\n    getPost,\r\n    getPostsLength,\r\n  } = useForm()\r\n  const {\r\n    sections,\r\n    position,\r\n    font,\r\n    title,\r\n    text,\r\n    image,\r\n    sectionId,\r\n    loading,\r\n    sectionSaved,\r\n    imageCleanupPublish,\r\n    postsLength,\r\n  } = values\r\n\r\n  useEffect(() => {\r\n    getPost(match.params.id)\r\n    getPostsLength()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      history.push('/login')\r\n    }\r\n  }, [user, history])\r\n\r\n  function isCreatePost() {\r\n    const urlParams = new URLSearchParams(window.location.search)\r\n    const createPost = urlParams.get('create')\r\n    return createPost\r\n  }\r\n\r\n  const submitHandler = async e => {\r\n    e.preventDefault()\r\n    const createPost = isCreatePost()\r\n    for (let i = 0; i < imageCleanupPublish.length; i++) {\r\n      deleteImage(imageCleanupPublish[i], user.token)\r\n    }\r\n    await submitForm(match.params.id, user.token, {\r\n      sections,\r\n      position: createPost ? postsLength : position,\r\n    })\r\n    history.push('/admin')\r\n  }\r\n\r\n  const cancelHandler = async e => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    await cancelForm(\r\n      window.location.search,\r\n      user.token,\r\n      match.params.id,\r\n      sections,\r\n      image\r\n    )\r\n    history.push('/admin')\r\n  }\r\n\r\n  const changeSection = async (\r\n    newFont,\r\n    newTitle,\r\n    newText,\r\n    newImage,\r\n    sectionId\r\n  ) => {\r\n    const createPost = isCreatePost()\r\n    // When editing post, delete image only if image not in db\r\n    if (image && !createPost && !sectionSaved) {\r\n      const imageInDb = await checkImageInDatabase(image, match.params.id)\r\n      if (!imageInDb) {\r\n        deleteImage(image, user.token)\r\n      }\r\n      // When creating post, delete image if not saved\r\n    } else if (createPost && !sectionSaved) {\r\n      if (image) {\r\n        let imageSaved = false\r\n        for (let i = 0; i < sections.length; i++) {\r\n          if (image === sections[i].image) {\r\n            imageSaved = true\r\n          }\r\n        }\r\n        if (!imageSaved) {\r\n          deleteImage(image, user.token)\r\n        }\r\n      }\r\n    }\r\n    setFont(newFont)\r\n    setTitle(newTitle)\r\n    setText(newText)\r\n    setImage(newImage)\r\n    setSectionId(sectionId)\r\n  }\r\n\r\n  function addSectionHandler(e) {\r\n    e.preventDefault()\r\n    if (!sectionId && image) {\r\n      deleteImage(image, user.token)\r\n    }\r\n    setSectionId('')\r\n    setTitle('')\r\n    setText('')\r\n    setImage('')\r\n    setSectionSaved(false)\r\n  }\r\n\r\n  function deleteSectionHandler(e) {\r\n    e.preventDefault()\r\n    if (sectionId) {\r\n      const imageToRemove = sections.find(\r\n        section => section.sectionId === sectionId\r\n      ).image\r\n      if (imageToRemove) {\r\n        setImageCleanupPublish(imageCleanupPublish.concat(imageToRemove))\r\n      }\r\n\r\n      const newSections = sections.filter(\r\n        section => section.sectionId !== sectionId\r\n      )\r\n      setSections(newSections)\r\n      setSectionId('')\r\n      setTitle('')\r\n      setText('')\r\n      setImage('')\r\n      setSectionSaved(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='form-container'>\r\n      <div className='cancel-publish-buttons'>\r\n        <button\r\n          className='cancel-button'\r\n          onClick={cancelHandler}\r\n          disabled={loading}>\r\n          <h3>CANCEL</h3>\r\n        </button>\r\n        <button\r\n          className='publish-button'\r\n          onClick={submitHandler}\r\n          disabled={loading || !sectionSaved}>\r\n          <h3>PUBLISH</h3>\r\n        </button>\r\n      </div>\r\n      <div className='section-previews'>\r\n        {sections.map(section => (\r\n          <SectionPreview\r\n            key={section.sectionId}\r\n            changeSection={changeSection}\r\n            deleteSectionHandler={deleteSectionHandler}\r\n            section={section}\r\n            sections={sections}\r\n            editPostScreen={true}\r\n            editing={section.sectionId === sectionId ? true : false}\r\n          />\r\n        ))}\r\n        {sections.length < 4 && (\r\n          <button onClick={addSectionHandler} className='add-section-button'>\r\n            <h3>+</h3>\r\n          </button>\r\n        )}\r\n      </div>\r\n      <PostSectionForm\r\n        sections={sections}\r\n        font={font}\r\n        setFont={setFont}\r\n        title={title}\r\n        setTitle={setTitle}\r\n        text={text}\r\n        setText={setText}\r\n        image={image}\r\n        setImage={setImage}\r\n        sectionId={sectionId}\r\n        setSectionId={setSectionId}\r\n        loading={loading}\r\n        setLoading={setLoading}\r\n        setSections={setSections}\r\n        sectionSaved={sectionSaved}\r\n        setSectionSaved={setSectionSaved}\r\n        imageCleanupPublish={imageCleanupPublish}\r\n        setImageCleanupPublish={setImageCleanupPublish}\r\n        token={user.token}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditPostScreen\r\n","import axios from 'axios'\r\n\r\nexport async function authUser(email, password) {\r\n  const { data } = await axios.post(\r\n    `/api/users/login`,\r\n    {\r\n      email,\r\n      password,\r\n    },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n  )\r\n\r\n  return data\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport './LoginScreen.css'\r\nimport { UserContext } from '../../UserContext'\r\nimport { authUser } from '../../requests/LoginRequests'\r\n\r\n// This comment is a test\r\n\r\nconst LoginScreen = ({ history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(false)\r\n\r\n  const { user, setUser } = useContext(UserContext)\r\n\r\n  const submitHandler = async e => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    try {\r\n      const data = await authUser(email, password)\r\n      sessionStorage.setItem('user', data)\r\n      setUser(data)\r\n      setLoading(false)\r\n    } catch (err) {\r\n      setError(true)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push('/admin')\r\n    }\r\n  }, [history, user])\r\n\r\n  return (\r\n    <>\r\n      <div className='form-container'>\r\n        <form onSubmit={submitHandler}>\r\n          <label htmlFor='email'>\r\n            <h2>Email</h2>\r\n          </label>\r\n          <input\r\n            name='email'\r\n            id='email'\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}></input>\r\n          <label htmlFor='password'>\r\n            <h2>Password</h2>\r\n          </label>\r\n          <input\r\n            name='password'\r\n            id='password'\r\n            type='password'\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}></input>\r\n          <br />\r\n          {error && <h3 className='error'>Invalid email or password</h3>}\r\n          <br />\r\n          <button className='login-button' type='submit' disabled={loading}>\r\n            <h3>LOG IN</h3>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React from 'react'\nimport { UserProvider } from './UserContext'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport HomeScreen from './screens/HomeScreen/HomeScreen'\nimport AdminScreen from './screens/AdminScreen/AdminScreen'\nimport EditPostScreen from './screens/EditPostScreen/EditPostScreen'\nimport LoginScreen from './screens/LoginScreen/LoginScreen'\nimport './App.css'\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Route path='/' component={HomeScreen} exact />\n        <UserProvider>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/admin' component={AdminScreen} exact />\n          <Route path='/admin/edit/:id' component={EditPostScreen} />\n        </UserProvider>\n      </Router>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}